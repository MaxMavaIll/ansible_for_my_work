---
- name: Extract filename from snapshot_url
  when: snapshot_url is defined
  set_fact:
    snapshot_name: "{{ snapshot_url | regex_search('([^/]+)$') }}"

- name: Print the filename
  when: snapshot_name is defined
  debug:
    msg: "The extracted filename is {{ snapshot_name }}"






- name: Update peers in config.toml file
  lineinfile:
    path: '{{ user_dir }}/{{ folder }}/config/config.toml'
    regexp: '^persistent_peers ='
    line: 'persistent_peers = "{{ peers }}"'
    state: present
  when: peers is defined

- name: Update seeds in config.toml file
  lineinfile:
    path: '{{ user_dir }}/{{ folder }}/config/config.toml'
    regexp: '^seeds ='
    line: 'seeds = "{{ seeds }}"'
    state: present
  when: seeds is defined

#- name: open p2p port
#  become: true
#  command: 'ufw allow {{ custom_port_prefix }}56/tcp'

- name: Download {{ network }} snapshot
  when: snapshot_url is defined
  get_url:
    url: '{{ snapshot_url }}'
    dest: "{{ user_dir }}/{{ snapshot_name }}"
    force: yes

- name: Unpack the {{ network }} snapshot
  when: snapshot_url is defined 
  shell: lz4 -c -d {{ user_dir }}/{{ snapshot_name }} | tar -x -C "{{ user_dir }}/{{ folder }}"
  args:
    chdir: "{{ user_dir }}"
  register: unpack_result

- name: Debug output of unpacking
  when: snapshot_url is defined 
  debug:
    var: unpack_result.stdout 

- name: Remove addrbook.json
  when: snapshot_url is defined
  shell: rm {{ user_dir }}/{{ snapshot_name }}

- name: Install {{ network }} addrbook
  when: addrbook_url is defined
  get_url:
    url: '{{ addrbook_url }}'
    dest: "{{ user_dir }}/addrbook.json"
    force: yes

- name: Move addrbook.json to the config directory
  when: addrbook_url is defined
  copy:
    src: "{{ user_dir }}/addrbook.json"
    dest: "{{ user_dir }}/{{ folder }}/config/addrbook.json"
    remote_src: yes

- name: Remove snapshot.tar 
  when: addrbook_url is defined
  shell: rm {{ user_dir }}/addrbook.json

- name: Create cosmovisor directories
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ user_dir }}/{{ folder }}/cosmovisor/genesis/bin'
    - '{{ user_dir }}/{{ folder }}/cosmovisor/upgrades'

- name: copy daemon file to cosmovisor
  copy:
    src: '{{ user_dir }}/go/bin/{{ daemon }}'
    dest: '{{ user_dir }}/{{ folder }}/cosmovisor/genesis/bin'
    remote_src: true
    mode: '0755'

- name: copy service file
  become: true
  template:
    src: 'cosmovisor.service.j2'
    dest: '/etc/systemd/system/{{ network }}-{{ main_or_test }}.service'
    owner: root
    group: root
    mode: '0644'

- name: start cosmovisor service
  become: true
  systemd:
    name: '{{ network }}-{{ main_or_test }}'
    state: restarted
    daemon_reload: yes
    enabled: yes
